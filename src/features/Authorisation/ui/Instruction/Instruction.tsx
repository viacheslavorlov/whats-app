import {memo} from 'react';
import {classNames} from 'shared/lib/classNames/classNames';
import cls from './Instruction.module.scss';

interface InstructionProps {
    className?: string;
    onClose?: () => void;
}


const instruction = (
    <>
        <h3>1. Создать учетную запись в Личном кабинете</h3>
        <section>
            Для создания учетной записи перейдите в Личный кабинет.
            После авторизации в личном кабинете будет доступна возможность создания аккаунта.
            В личном кабинете можно создать несколько аккаунтов для одной учетной записи.
        </section>
        <h3>2. Создать Аккаунт</h3>
        <section>
            Аккаунт создается в личном кабинете и используется для организации HTTP API WhatsApp.
            Один аккаунт может одновременно обслуживать только один номер телефона (один аккаунт WhatsApp).
            При создании аккаунта требуется выбрать тариф.
            Для БЕСПЛАТНОГО ИСПОЛЬЗОВАНИЯ И ДЛЯ РАЗРАБОТЧИКОВ - ИСПОЛЬЗОВАТЬ ТАРИФ DEVELOPER!
        </section>
        <h3>
            3. Установить мобильное приложение WhatsApp Business
        </h3>
        <section>
            Отправка и получение сообщений WhatsApp выполняется с вашего мобильного трелефона.
            На телефоне должно быть установлено официальное мобильное приложение WhatsApp Business.
            Допускается также использование мобильного приложения WhatsApp,
            если использование WhatsApp Business по каким-либо причинам невозможно.
        </section>
        <h3>
            4. Авторизовать Аккаунт
        </h3>
        <section>
            В случае, если для работы с Green API используется личный мобильный телефон,
            требуется авторизовать аккаунт.
            Авторизация аккаунта выполняется в Личном кабинете путем считывания QR-кода из мобильного
            приложения WhatsApp Business.
            Для этого откройте на своем мобильном телефоне приложение WhatsApp Business,
            перейдите в настройки приложения и считайте QR-код, который отображается в личном кабинете.
        </section>
        <code>
            Android: WhatsApp Business -{'>'} Выпадающее меню -{'>'} WhatsApp Web
        </code>
        <br/>
        <code>
            iPhone: WhatsApp Business -{'>'} Настройки -{'>'} WhatsApp Web -{'>'} Сканировать QR-код
        </code>
        <section>
            Отправка и получение сообщений выполняется с вашего мобильного телефона.
            Поэтому телефон должен быть всегда заряжен и подключен к сети Интернет
        </section>
        <h3>
            5. Получить параметры доступа к Аккаунту
        </h3>
        <section>
            Для выполнения запросов HTTP API WhatsApp требуется использовать параметры доступа к Аккаунту.
            Параметры доступа публикуются в Личном кабинете:
            Для выполнения запросов HTTP API WhatsApp требуется использовать параметры доступа к Аккаунту.
            Параметры доступа публикуются в Личном кабинете:
        </section>
        <code>idInstance - уникальный номер аккаунта</code>
        <br/>
        <code>apiTokenInstance - ключ доступа аккаунта</code>
        <section>
            Ключ доступа аккаунта можно сменить при необходимости,
            например, в случае его компрометации.
        </section>
        <h3>
            6. Настроить получение входящих данных
        </h3>
        <section>
            Если требуется получать входящие данные
            (входящие сообщения, статусы ранее отправленных сообщений и др.),
            то предварительно необходимо выполнить настройку аккаунта.
            Получать входящие уведомления можно через HTTP API или через Webhook Endpoint.
        </section>
        <h3>
            Готово!
        </h3>
        <section>
            Всё готово для начала отправки и получения сообщений WhatsApp!
        </section>
    </>
);

export const Instruction = memo((props: InstructionProps) => {
    const {
        className, onClose
    } = props;

    return (
        <div className={classNames('', {}, [className])}>
            <button className={cls.smallButton} onClick={onClose}>X</button>
            <h1>Инструкция по входу в приложение</h1>
            <section className={cls.Instruction}>
                {instruction}
            </section>
        </div>
    );
});
